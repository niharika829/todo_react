{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-5hr\\\\src\\\\components\\\\meme\\\\memegenerator.js\";\nimport React, { Component } from \"react\";\n\nclass Memegenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toptext: \"\",\n      bottomtext: \"\",\n      randomimage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handle = this.handle.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      console.log(memes);\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"toptext\",\n      placeholder: \"toptext\",\n      value: this.state.toptext,\n      onChange: this.handle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomtext\",\n      placeholder: \"bottomtext\",\n      value: this.state.bottomtext,\n      onChange: this.handle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Memegenerator;","map":{"version":3,"sources":["C:/react-5hr/src/components/meme/memegenerator.js"],"names":["React","Component","Memegenerator","constructor","state","toptext","bottomtext","randomimage","allMemeImgs","handle","bind","componentDidMount","fetch","then","response","json","memes","data","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,WAAW,EAAE,+BAHF;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB,YAAM;AAAEE,QAAAA;AAAF,UAAYF,QAAQ,CAACG,IAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAKI,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AACD,KANH;AAOD;;AACDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,WAAW,EAAC,SAHd;AAIE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,OAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKI,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,WAAW,EAAC,YAHd;AAIE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKG,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF;AAoBD;;AAzCmC;;AA2CtC,eAAeP,aAAf","sourcesContent":["import React, { Component } from \"react\";\r\nclass Memegenerator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      toptext: \"\",\r\n      bottomtext: \"\",\r\n      randomimage: \"http://i.imgflip.com/1bij.jpg\",\r\n      allMemeImgs: [],\r\n    };\r\n    this.handle = this.handle.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        const { memes } = response.data;\r\n        console.log(memes);\r\n        this.setState({ allMemeImgs: memes });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"toptext\"\r\n            placeholder=\"toptext\"\r\n            value={this.state.toptext}\r\n            onChange={this.handle}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"bottomtext\"\r\n            placeholder=\"bottomtext\"\r\n            value={this.state.bottomtext}\r\n            onChange={this.handle}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Memegenerator;\r\n"]},"metadata":{},"sourceType":"module"}